##
##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##
##
#
##
## ZooKeeper Logging Configuration
##
#
## Format is "<default threshold> (, <appender>)+
#
## DEFAULT: console appender only
#log4j.rootLogger=INFO, CONSOLE
#
## Example with rolling log file
##log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE
#
## Example with rolling log file and tracing
##log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE
#
##
## Log INFO level and above messages to the console
##
#log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
#log4j.appender.CONSOLE.Threshold=INFO
#log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
#log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p - [%t:%C{1}@%L] - %m%n
#
##
## Add ROLLINGFILE to rootLogger to get log file output
##    Log DEBUG level and above messages to a log file
#log4j.appender.ROLLINGFILE=org.apache.log4j.ConsoleAppender
#log4j.appender.ROLLINGFILE.Threshold=DEBUG
#log4j.appender.ROLLINGFILE.File=bookkeeper.log
#log4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout
#log4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p - [%t:%C{1}@%L] - %m%n
#
## Max log file size of 10MB
#log4j.appender.ROLLINGFILE.MaxFileSize=10MB
## uncomment the next line to limit number of backup files
##log4j.appender.ROLLINGFILE.MaxBackupIndex=10
#
##
## Add TRACEFILE to rootLogger to get log file output
##    Log DEBUG level and above messages to a log file
#log4j.appender.TRACEFILE=org.apache.log4j.FileAppender
#log4j.appender.TRACEFILE.Threshold=TRACE
#log4j.appender.TRACEFILE.File=bookkeeper_trace.log
#
#log4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout
#### Notice we are including log4j's NDC here (%x)
#log4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n

status = error
name = ZookeeperMetricsLog4j2Config

property.zookeeper.console.threshold=info

property.zookeeper.log.dir=.
property.zookeeper.log.file=zookeeper.log
property.zookeeper.log.threshold=info
property.zookeeper.log.maxfilesize=10MB
property.zookeeper.log.maxbackupindex=10

property.zookeeper.tracelog.dir=${zookeeper.log.dir}
property.zookeeper.tracelog.file=zookeeper_trace.log


appenders = console, file
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{ISO8601} [myid:%pid] - %-5p [%t:%C{1}@%L] - %m%n
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = ${zookeeper.console.threshold}

appender.file.type = RollingFile
appender.file.name = CONTRIB_ZOOKEEPER_LOG_FILE
appender.file.filter.threshold.type = ThresholdFilter
appender.file.filter.threshold.level = ${zookeeper.log.threshold}
appender.file.filename = ${zookeeper.log.dir}/${zookeeper.log.file}
appender.file.filePattern = ${zookeeper.log.dir}/zookeeper-%d{MM-dd-yy-HH-mm-ss}-%i.log.gz
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = %d{ISO8601} [myid:%pid] - %-5p [%t:%C{1}@%L] - %m%n
appender.file.policies.type = Policies
appender.file.policies.size.type = SizeBasedTriggeringPolicy
appender.file.policies.size.size=10MB
appender.file.strategy.type = DefaultRolloverStrategy
appender.file.strategy.max = 10


rootLogger.level = info
rootLogger.appenderRefs = stdout, logfile
rootLogger.appenderRef.stdout.ref = STDOUT
rootLogger.appenderRef.logfile.ref = CONTRIB_ZOOKEEPER_LOG_FILE